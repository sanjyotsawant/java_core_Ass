
48.	Create an Abstract class Processor with int member variable data  and method showData to display data value. Create abstract method process() to define processing of member data. Create a class  Factorial using abstract class Processor  to calculate and print factorial of a number by overriding the process method. b. Create a class Circle using abstract class Processor to calculate and print area of a circle by overriding the process method.Ask user to enter choice (factorial or circle area).  Also ask data to work upon. Use Processor class reference to achieve this mechanism.



import java.util.*;

abstract class Processor{
	double data;
		
	void showData(){
		System.out.println(data);
	}

	abstract void process();
}

class Factorial extends Processor{
	void process(){
		Scanner sc = new Scanner(System.in);
		int n = sc.nextInt();
		int sum = 1;
		for(int i=1; i<=n; i++){
			sum=sum*i;
		}
		data=sum;
	}
}


class Circle extends Processor{
	void process(){
		Scanner sc = new Scanner(System.in);
		float r = sc.nextFloat();
		double area;
		area = 3.14f * r * r;
		data = area;	
	}
}


class Q48{
	public static void main(String args[]){
		Processor p = new Factorial();
		Processor p1 = new Circle();

		p.process();
		p.showData();

		p1.process();
		p1.showData();
	}
}




==============================================================================



49.	Create Interface Taxable with members salesTax=7% and incomeTax=10.5%. create abstract method calcTax(). a. Create class Employee(empId,name,salary) and implement Taxable to calculate incomeTax on yearly salary. b. Create class Product(pid,price,quantity) and implement Taxable to calculate salesTax on unit price of product. c. Create class for main method(Say XYZ), accept employee information and a product information from user and print income tax and sales tax respectively.



import java.util.Scanner;
interface Taxable{
    double salaryTax = 0.07;
    double incomeTax = 0.15;

    void calcTax();
}
class Employee implements Taxable {
    int empId;
    String name;
    double salary;

    Employee(){

    }
    Employee(int empId,String name,double salary){
        this.empId=empId;
        this.name=name;
        this.salary=salary;
    }

    public void calcTax(){
        double totaTaxSalary = salaryTax * salary * 12;
        System.out.println("Total Salary Tax:: "+totaTaxSalary);
    }

}
class Product implements Taxable{

    int pid;
    double price;
    int qty;

    Product(){}

    Product(int pid,double price,int qty){
        this.pid = pid;
        this.price = price;
        this.qty = qty;
    }
    public void calcTax(){
        double totaSalesTax = incomeTax * price *qty;
        System.out.println("Total Sales Tax:: "+totaSalesTax);
    }
}
public class Q49 {
    public static void main(String[] args){
        Employee e = new Employee(10,"mrunali",100.0);
        e.calcTax();
        Product p = new Product(20,200.2,3);
        p.calcTax();
    }
}


=============================================================================