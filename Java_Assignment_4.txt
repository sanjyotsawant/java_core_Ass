33.	Write a program to demonstrate functionalities of this keyword in java. 


34.	Create a class Circle that has two data members, one to store the radius and another to store area and three methods first init() method to input radius from user, second calculateArea() method to calculate area of circle and third display() method to display values of radius and area. Create class CircleDemo ( main class) that creates the Circle object and calls init(), calculateArea() and display() methods.

import java.util.Scanner;
class Circle{
	private int r;
	private double a;
	final double pi=3.14;

	void init(int r){
		this.r=r;
	}
	void calculateArea(){
		a=pi * r * r;
	}
	void display(){
		System.out.println("Area of a circle is : "+ a);
	}
}

class CircleDemo{
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);
		Circle c = new Circle();
		System.out.println("Enter radius");
		int r = sc.nextInt();
		c.init(r);
		c.calculateArea();
		c.display();
	}
}


==========================================================================


35.	Create a class MathOperation that has four static methods. add() method that takes two integer numbers as parameter and returns the sum of the numbers. subtract() method that takes two integer numbers as parameter and returns the difference of the numbers. multiply() method that takes two integer numbers as parameter and returns the product. power() method that takes two integer numbers as parameter and returns the power of first number to second number. Create another class Demo (main class) that takes the two numbers from the user and calls all four methods of MathOperation class by providing entered numbers and prints the return values of every method.


import java.util.Scanner;
class MathOpe
{
	static int add(int n1,int n2)
	{
		return n1+n2;
	}
	static int sub(int n1,int n2)
	{
		return n1-n2;
	}
	static int mul(int n1,int n2)
	{
		return n1*n2;
	}
	static double pow(int n1,int n2)
	{
		return Math.pow(n1,n2);
	}
}
class MathOpeDemo
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		System.out.println("Enter the Two no.");
		int num1 = sc.nextInt();
		int num2 = sc.nextInt();
		System.out.println("Addition : "+MathOpe.add(num1,num2));
		System.out.println("Substraction : "+MathOpe.sub(num1,num2));
		System.out.println("Multiplication : "+MathOpe.mul(num1,num2));
		System.out.println("Power : "+MathOpe.pow(num1,num2));
	}
}


==========================================================================


36.	Create a class MathOperation containing overloaded methods ‘multiply’ to calculate multiplication of following arguments. 
a.	 two integers 
b.	 three floats 
c.	 all elements of array 
d.	one double and one integer 

import java.util.Scanner;
class MathOpe
{
	static int multiply(int n1,int n2)
	{
		return n1*n2;
	}
	static float multiply(float n1, float n2, float n3)
	{
		return n1*n2*n3;
	}
	static double multiply(double n1,int n2)
	{
		return n1*n2;
	}
	static int multiply(int ar[])
	{
		int a=1;
		for(int i=0; i<ar.length; i++)
		{	
			a=a*ar[i];
		}
		return a;
	}
	
}
class MathOpeDemo
{
	public static void main(String args[])
	{
		Scanner sc = new Scanner(System.in);
		
		System.out.println("Addition : "+MathOpe.multiply(10,20));
		System.out.println("Substraction : "+MathOpe.multiply(10.3f, 20.4f, 30.3f));
		System.out.println("Multiplication : "+MathOpe.multiply(5.5,10));
		
		int ar[]={2,5,1};
		System.out.println("Multiplication : "+MathOpe.multiply(ar));
		
		
	}
}



==========================================================================


37.	Create a class Person with properties (name and age) with following features. 
a.	Default age of person should be 18.
b.	A person object can be initialized with name and age.
c.	Method to display name and age of person
Create another class PersonDemo ( main class ) that demonstrates the functionalities of Person class by creating Person object and calling methods.


import java.util.Scanner;

class Person{
	private int age;
	private String name;

	Person(){
		age=18;
	}

	Person(int age, String name){
		this.age=age;
		this.name=name;
	}
	void display(){
		System.out.println("Name : "+name+" Age : "+age);
	}
}

class PersonDemo{
	public static void main(String args[]){
		Person p = new Person();
		p.display();
		Person p1 = new Person(20,"Ram");
		p1.display();
	}
}


===========================================================================

38.	Create a class Employee with three data members (empNo, salary and totalSalary) and following features.
a.	Only parameterized constructor. [Do not overload the constructor]
b.	totalSalary always represents salary total of all the employees created.
c.	empNo should be auto incremented.
d.	display total employees and totalSalary using a method.
Create another class EmployeeDemo (main class) that creates some Employee objects and calls Employee method to display no. of employees and total of their salaries.



import java.util.Scanner;

class Employee{
	static int empNo;
	double salary;
	static double totalSalary=0;

	Employee(int n, double s){
		empNo=n;
		salary=s;
		//totalSalary=ts;
	}
	void cal(){
		totalSalary+=salary;
	}

	void display(){
		
		System.out.println("No of Employees : "+empNo+ "     " + "Total Salary : " + totalSalary);
	}
	

	
}


class EmployeeDemo{
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);
		Employee ar[] = new Employee[3];
		
		for(int i=0; i<ar.length; i++){
			System.out.println("Enter Salary : " );
			double salary = sc.nextDouble();
			//empNo=i+1;
			Employee e = new Employee(i+1,salary);
			ar[i] =e;
			
			
		}
		for(Employee a:ar){
			a.cal();
		}

		
			ar[1].display();
		

		
	}

}


===========================================================================


39.	Create class Product with three data members (pid, price, quantity) and parameterized constructor that takes values for all three data members.  
Create a main method in different class (say ProductDemo) and perform following task:
a. Accept information for five Product objects from user and store objects in an array
b. Find pid of product with highest price. 
c. Create a static method (with array of product’s object as argument) in Product class to calculate and return total amount spent on all products. ( amount spent on single product = price of product * quantity of product )





===========================================================================


40.	Create a class Student having data members name, roll no., age and score. Write a program to accept 10 records of student and store them in an array. And then arrange the student records based on the score group [0-50], [50-65], [65-80], [80-100].


import java.util.Scanner;

class Student{
	private String name;
	private int rollNo;
	private int age;
	private double score;

	Student(String name, int rollNo, int age, double score){
		this.name=name;
		this.rollNo=rollNo;
		this.age=age;
		this.score=score;
	}

	double getScore(){
		return score;
	}
	void display(){
		System.out.println("Roll No : " + rollNo + "  Score : " + score);
	}
}

class StudentDemo{
	public static void main(String args[]){
		Scanner sc = new Scanner(System.in);
		Student ar[] = new Student[10];

		for(int i=0; i<ar.length; i++){
			System.out.println("Enter Name : ");
			String name = sc.next();

			System.out.println("Enter Roll No : ");
			int rollNo = sc.nextInt();

			System.out.println("Enter Age : ");
			int age = sc.nextInt();
			
			System.out.println("Enter Score : ");
			double score = sc.nextDouble();

			Student s = new Student(name,rollNo,age,score);
			ar[i] = s;
		}

		System.out.println("");
		System.out.println("Score between 0 to 50 : ");
		for (Student s : ar){
			if(s.getScore()<=50){
				s.display();
			}
		}

		System.out.println("");
		System.out.println("Score between 50 to 65 : ");
		for (Student s : ar){
			if(s.getScore()>50 && s.getScore()<=65){
				s.display();
			}
		}

		System.out.println("");
		System.out.println("Score between 65 to 80 : ");
		for (Student s : ar){
			if(s.getScore()>65 && s.getScore()<=80){
				s.display();
			}
		}
	
		System.out.println("");
		System.out.println("Score between 80 to 100 : ");
		for (Student s : ar){
			if(s.getScore()>80 && s.getScore()<=100){
				s.display();
			}
		}
			
	}
}



===========================================================================


41.	Write a program to demonstrate this() construct functionality.



class ThisConst
{	
	private int empid;
	private String ename;

	ThisConst()
	{
		this(101,"Ritu");
	}
	ThisConst(int empid,String ename)
	{
		this.empid = empid;
		this.ename = ename;
	}
	void show()
	{
		System.out.println(empid+"  "+ename);
	}
}
class ThisConstDemo
{
	public static void main(String args[])
	{
		ThisConst t = new ThisConst();
		t.show();
	}
}

===========================================================================


42.	Create a class Tile to store the edge length of a square tile, and create another class Floor to store length and width of a rectangular floor. Add method totalTiles(Tile t) in Floor class with Tile as argument to calculate the whole number of tiles needed to cover the floor completely.



import java.util.Scanner;
class Tile{
	int edge;
	 double area;
	Tile(int edge){
		this.edge=edge;
		this.area=edge*edge;
	}
}

class Floor{
	int l;
	 int w;
	 double area; 
	Floor(int l,int w){
		this.l=l;
		this.w=w;
		this.area=l*w;
	}
 	double totaltiles(Tile t)
	{
                           return (this.area/t.area);
	}
}

class Q42{
public static void main(String args[]){
 	Scanner sc=new Scanner(System.in);
	Tile t=new Tile(10);
	Floor f=new Floor(100,200);
                     double tt=f.totaltiles(t);
	System.out.println("Total Tiles Required: "+tt);
}}



=========================================================================


43.	Create a class OneBHK with instance variables roomArea, hallArea and price. Then create default constructor that initializes instance variables with some values and a parameterized constructor that takes values for all instance variables and stores them in instance variables. Now create a method named show()  to print OneBHK’s instance variable values.
Create another class TwoBHK which has (inherites) all the properties and behaviors of OneBHK and a new instance variable room2Area. Then create default constructor to initialize all 4 instance variables and a parameterized constructor to take the values for initialization of all instance variables. Override show() method to print all data member information.
Write main method in another class (Say Demo) and store three TwoBHK flat’s information and print information using show method. Also print total amount of all flats.


import java.util.Scanner;
class OneBHK{
	double roomArea;
	double hallArea;
	double price;

	OneBHK(double roomArea,double hallArea,double price){
		this.roomArea=roomArea;
		this.hallArea=hallArea;
		this.price=price;
	}

	void show(){
		System.out.println("Room Area 1: "+roomArea+" Hall 	Area:"+hallArea+" Price:"+price);
	}
}

class TwoBHK extends OneBHK{
	double roomArea2;
	TwoBHK(double roomArea,double hallArea,double price,double roomArea2){
                                          super(roomArea, hallArea, price);
		this.roomArea2=roomArea2;
		
	}

	void show(){
		super.show();
		System.out.println("Room Area 2: "+roomArea2);
	}
}

class Q43{
public static void main(String args[]){
 	Scanner sc=new Scanner(System.in);
	double total = 0.00;
	TwoBHK []tb=new TwoBHK[3];
	for(int i=0;i<tb.length;i++){
		System.out.println("Enter Room1 area:  ");
		double ra1=sc.nextDouble();
		System.out.println("Enter Hall area:  ");
		double ha=sc.nextDouble();
		System.out.println("Enter Price:  ");
		double price=sc.nextDouble();
		 total += price;
		System.out.println("Enter Room2 area:  ");	
		double ra2=sc.nextDouble();
		
                                          TwoBHK tb1=new TwoBHK(ra1,ha,price,ra2);
		tb[i]=tb1;
                                           
	}
	for(TwoBHK a: tb){
		a.show();
	}
	System.out.println("Total Prize of the flats: "+total);
}}

=========================================================================== 



